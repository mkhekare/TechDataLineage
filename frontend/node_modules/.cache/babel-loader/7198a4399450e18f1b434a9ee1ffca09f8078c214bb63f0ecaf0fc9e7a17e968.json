{"ast":null,"code":"var _jsxFileName = \"/Users/mayurk/TechDataLineage/TechDataLineage/frontend/src/components/LineageGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport mermaid from 'mermaid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineageGraph = ({\n  graphDefinition\n}) => {\n  _s();\n  useEffect(() => {\n    if (graphDefinition) {\n      // Initialize mermaid once (or ensure it's initialized)\n      mermaid.initialize({\n        startOnLoad: false\n      }); // We will manually run it\n\n      // Render the graph. mermaid.run() processes all elements with class 'mermaid'\n      // This ensures it re-renders when graphDefinition changes\n      try {\n        mermaid.run({\n          nodes: document.querySelectorAll('.mermaid')\n        });\n      } catch (e) {\n        console.error(\"Mermaid rendering error:\", e);\n      }\n    }\n  }, [graphDefinition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lineage-graph\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mermaid\",\n      children: graphDefinition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(LineageGraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LineageGraph;\nexport default LineageGraph;\nvar _c;\n$RefreshReg$(_c, \"LineageGraph\");","map":{"version":3,"names":["React","useEffect","mermaid","jsxDEV","_jsxDEV","LineageGraph","graphDefinition","_s","initialize","startOnLoad","run","nodes","document","querySelectorAll","e","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mayurk/TechDataLineage/TechDataLineage/frontend/src/components/LineageGraph.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport mermaid from 'mermaid';\n\nconst LineageGraph = ({ graphDefinition }) => {\n    useEffect(() => {\n        if (graphDefinition) {\n            // Initialize mermaid once (or ensure it's initialized)\n            mermaid.initialize({ startOnLoad: false }); // We will manually run it\n            \n            // Render the graph. mermaid.run() processes all elements with class 'mermaid'\n            // This ensures it re-renders when graphDefinition changes\n            try {\n                mermaid.run({\n                    nodes: document.querySelectorAll('.mermaid')\n                });\n            } catch (e) {\n                console.error(\"Mermaid rendering error:\", e);\n            }\n        }\n    }, [graphDefinition]);\n\n    return (\n        <div className=\"lineage-graph\">\n            <div className=\"mermaid\">\n                {graphDefinition}\n            </div>\n        </div>\n    );\n};\n\nexport default LineageGraph;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1CN,SAAS,CAAC,MAAM;IACZ,IAAIK,eAAe,EAAE;MACjB;MACAJ,OAAO,CAACM,UAAU,CAAC;QAAEC,WAAW,EAAE;MAAM,CAAC,CAAC,CAAC,CAAC;;MAE5C;MACA;MACA,IAAI;QACAP,OAAO,CAACQ,GAAG,CAAC;UACRC,KAAK,EAAEC,QAAQ,CAACC,gBAAgB,CAAC,UAAU;QAC/C,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,CAAC,CAAC;MAChD;IACJ;EACJ,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErB,oBACIF,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1Bd,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,EACnBZ;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CAzBIF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}