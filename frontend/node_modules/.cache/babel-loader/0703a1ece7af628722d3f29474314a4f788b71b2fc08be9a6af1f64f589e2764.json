{"ast":null,"code":"var _jsxFileName = \"/Users/mayurk/TechDataLineage/TechDataLineage/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUpload from '../components/FileUpload';\nimport RepositoryLinkInput from '../components/RepositoryLinkInput';\nimport LineageGraph from '../components/LineageGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [lineageGraph, setLineageGraph] = useState(`graph TD;\n    A[No Data Processed Yet]`);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleProcess = async (data, type) => {\n    const formData = new FormData();\n    if (type === 'file') {\n      formData.append('file', data);\n    } else if (type === 'repo') {\n      formData.append('repo_link', data);\n    }\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setMessage(result.message);\n        setLineageGraph(result.lineage);\n        setError('');\n      } else {\n        setError(result.error || 'An unknown error occurred');\n        setMessage('');\n        setLineageGraph('');\n      }\n    } catch (err) {\n      setError('Network error or server is unreachable.');\n      setMessage('');\n      setLineageGraph('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI-Powered Data Lineage Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onFileUpload: file => handleProcess(file, 'file')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RepositoryLinkInput, {\n      onRepoSubmit: link => handleProcess(link, 'repo')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(LineageGraph, {\n      graphDefinition: lineageGraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"EI/I7B6/jdwSOSTzvz1TiGDem1E=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","FileUpload","RepositoryLinkInput","LineageGraph","jsxDEV","_jsxDEV","HomePage","_s","lineageGraph","setLineageGraph","message","setMessage","error","setError","handleProcess","data","type","formData","FormData","append","response","fetch","method","body","result","json","ok","lineage","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","file","onRepoSubmit","link","style","color","graphDefinition","_c","$RefreshReg$"],"sources":["/Users/mayurk/TechDataLineage/TechDataLineage/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FileUpload from '../components/FileUpload';\nimport RepositoryLinkInput from '../components/RepositoryLinkInput';\nimport LineageGraph from '../components/LineageGraph';\n\nconst HomePage = () => {\n    const [lineageGraph, setLineageGraph] = useState(`graph TD;\n    A[No Data Processed Yet]`);\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    const handleProcess = async (data, type) => {\n        const formData = new FormData();\n        if (type === 'file') {\n            formData.append('file', data);\n        } else if (type === 'repo') {\n            formData.append('repo_link', data);\n        }\n\n        try {\n            const response = await fetch('/api/upload', {\n                method: 'POST',\n                body: formData,\n            });\n\n            const result = await response.json();\n\n            if (response.ok) {\n                setMessage(result.message);\n                setLineageGraph(result.lineage);\n                setError('');\n            } else {\n                setError(result.error || 'An unknown error occurred');\n                setMessage('');\n                setLineageGraph('');\n            }\n        } catch (err) {\n            setError('Network error or server is unreachable.');\n            setMessage('');\n            setLineageGraph('');\n        }\n    };\n\n    return (\n        <div>\n            <h1>AI-Powered Data Lineage Generator</h1>\n            <FileUpload onFileUpload={(file) => handleProcess(file, 'file')} />\n            <RepositoryLinkInput onRepoSubmit={(link) => handleProcess(link, 'repo')} />\n            {message && <p style={{ color: 'green' }}>{message}</p>}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <LineageGraph graphDefinition={lineageGraph} />\n        </div>\n    );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}